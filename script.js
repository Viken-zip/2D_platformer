import { playerUpdate, drawPlayer, player, newStart } from "./lib/player.js";
import { newBrick, drawBricks, clearBricks } from "./lib/brick.js";
import { newLava, drawLava, clearLavas } from "./lib/lava.js";
import { newRoofChain, newFloorChain, newChain, newFloorChainFade, newRoofChainFade, newChainFadeIn, newChainFadeOut, drawChains, clearChains } from "./lib/chains-c.js"
import { createLevel, startLevel, maxCameraDistance } from "./lib/levels.js";
import { newGoal, drawGoals, clearGoals } from "./lib/goal.js"

const canvas = document.getElementById('canvas');
const context = canvas.getContext('2d');

const camera = {
    x: 0,
    y: 0
}

canvas.width = innerWidth;
canvas.height = innerHeight;

let tile = innerHeight / 16
let previousElapsed = 0;
let maxCamX = 1000;

requestAnimationFrame(gameLoop);
function gameLoop(elapsed){

    let deltaTime = (elapsed - previousElapsed) / 1000;
    //console.log(deltaTime)
    previousElapsed = elapsed;
    
    playerUpdate(deltaTime);



    camera.x = Math.max(0, player.x - canvas.width/2);
    camera.x = Math.min(camera.x, maxCamX * tile + tile - canvas.width)

    context.clearRect(0, 0, innerWidth, innerHeight);
    drawPlayer(context, camera);
    drawBricks(context, camera);
    drawLava(context, camera);
    drawChains(context, camera);
    drawGoals(context, camera);

    requestAnimationFrame(gameLoop);
};

createLevel(() => {
    clearLavas();
    clearBricks();
    clearChains();
    clearGoals();
    maxCamX = maxCameraDistance();

    newBrick(tile * 10, tile * 4, tile, tile);
newBrick(tile * 11, tile * 4, tile, tile);
newBrick(tile * 13, tile * 4, tile, tile);
newBrick(tile * 12, tile * 4, tile, tile);
newBrick(tile * 14, tile * 4, tile, tile);
newBrick(tile * 14, tile * 5, tile, tile);
newBrick(tile * 14, tile * 6, tile, tile);
newBrick(tile * 14, tile * 7, tile, tile);
newBrick(tile * 13, tile * 7, tile, tile);
newBrick(tile * 12, tile * 7, tile, tile);
newBrick(tile * 11, tile * 7, tile, tile);
newBrick(tile * 10, tile * 7, tile, tile);
newBrick(tile * 10, tile * 8, tile, tile);
newBrick(tile * 12, tile * 8, tile, tile);
newBrick(tile * 14, tile * 8, tile, tile);
newBrick(tile * 11, tile * 8, tile, tile);
newBrick(tile * 13, tile * 8, tile, tile);
newBrick(tile * 11, tile * 9, tile, tile);
newBrick(tile * 11, tile * 10, tile, tile);
newBrick(tile * 10, tile * 10, tile, tile);
newBrick(tile * 10, tile * 9, tile, tile);
newBrick(tile * 10, tile * 11, tile, tile);
newBrick(tile * 11, tile * 11, tile, tile);
newBrick(tile * 12, tile * 11, tile, tile);
newBrick(tile * 13, tile * 9, tile, tile);
newBrick(tile * 12, tile * 10, tile, tile);
newBrick(tile * 12, tile * 9, tile, tile);
newBrick(tile * 13, tile * 10, tile, tile);
newBrick(tile * 13, tile * 11, tile, tile);
newBrick(tile * 14, tile * 10, tile, tile);
newBrick(tile * 14, tile * 9, tile, tile);
newBrick(tile * 14, tile * 11, tile, tile);
newBrick(tile * 11, tile * 12, tile, tile);
newBrick(tile * 13, tile * 12, tile, tile);
newBrick(tile * 15, tile * 9, tile, tile);
newBrick(tile * 15, tile * 7, tile, tile);
newBrick(tile * 15, tile * 6, tile, tile);
newBrick(tile * 15, tile * 8, tile, tile);
newBrick(tile * 16, tile * 6, tile, tile);
newBrick(tile * 16, tile * 7, tile, tile);
newBrick(tile * 16, tile * 8, tile, tile);
newBrick(tile * 16, tile * 9, tile, tile);
newBrick(tile * 11, tile * 3, tile, tile);
newBrick(tile * 12, tile * 3, tile, tile);
newBrick(tile * 13, tile * 3, tile, tile);
newBrick(tile * 9, tile * 6, tile, tile);
newBrick(tile * 9, tile * 5, tile, tile);
newBrick(tile * 13, tile * 5, tile, tile);
newBrick(tile * 13, tile * 6, tile, tile);
newBrick(tile * 20, tile * 12, tile, tile);
newBrick(tile * 21, tile * 12, tile, tile);
newBrick(tile * 22, tile * 12, tile, tile);
newBrick(tile * 23, tile * 12, tile, tile);
newBrick(tile * 24, tile * 11, tile, tile);
newBrick(tile * 24, tile * 10, tile, tile);
newBrick(tile * 22, tile * 9, tile, tile);
newBrick(tile * 21, tile * 9, tile, tile);
newBrick(tile * 23, tile * 9, tile, tile);
newBrick(tile * 20, tile * 8, tile, tile);
newBrick(tile * 20, tile * 7, tile, tile);
newBrick(tile * 21, tile * 6, tile, tile);
newBrick(tile * 22, tile * 6, tile, tile);
newBrick(tile * 24, tile * 6, tile, tile);
newBrick(tile * 23, tile * 6, tile, tile);
newBrick(tile * 26, tile * 6, tile, tile);
newBrick(tile * 26, tile * 7, tile, tile);
newBrick(tile * 26, tile * 8, tile, tile);
newBrick(tile * 26, tile * 9, tile, tile);
newBrick(tile * 26, tile * 10, tile, tile);
newBrick(tile * 26, tile * 11, tile, tile);
newBrick(tile * 27, tile * 12, tile, tile);
newBrick(tile * 28, tile * 12, tile, tile);
newBrick(tile * 29, tile * 12, tile, tile);
newBrick(tile * 30, tile * 12, tile, tile);
newBrick(tile * 31, tile * 11, tile, tile);
newBrick(tile * 31, tile * 9, tile, tile);
newBrick(tile * 31, tile * 8, tile, tile);
newBrick(tile * 31, tile * 7, tile, tile);
newBrick(tile * 31, tile * 6, tile, tile);
newBrick(tile * 31, tile * 10, tile, tile);
newBrick(tile * 33, tile * 12, tile, tile);
newBrick(tile * 34, tile * 12, tile, tile);
newBrick(tile * 35, tile * 12, tile, tile);
newBrick(tile * 36, tile * 12, tile, tile);
newBrick(tile * 37, tile * 11, tile, tile);
newBrick(tile * 37, tile * 10, tile, tile);
newBrick(tile * 36, tile * 9, tile, tile);
newBrick(tile * 35, tile * 9, tile, tile);
newBrick(tile * 34, tile * 9, tile, tile);
newBrick(tile * 33, tile * 8, tile, tile);
newBrick(tile * 33, tile * 7, tile, tile);
newBrick(tile * 34, tile * 6, tile, tile);
newBrick(tile * 35, tile * 6, tile, tile);
newBrick(tile * 37, tile * 6, tile, tile);
newBrick(tile * 36, tile * 6, tile, tile);
newBrick(tile * 7, tile * 14, tile, tile);
newBrick(tile * 9, tile * 14, tile, tile);
newBrick(tile * 10, tile * 14, tile, tile);
newBrick(tile * 8, tile * 14, tile, tile);
newBrick(tile * 11, tile * 14, tile, tile);
newBrick(tile * 12, tile * 14, tile, tile);
newBrick(tile * 13, tile * 14, tile, tile);
newBrick(tile * 14, tile * 14, tile, tile);
newBrick(tile * 15, tile * 14, tile, tile);
newBrick(tile * 16, tile * 14, tile, tile);
newBrick(tile * 17, tile * 14, tile, tile);
newBrick(tile * 18, tile * 14, tile, tile);
newBrick(tile * 20, tile * 14, tile, tile);
newBrick(tile * 23, tile * 14, tile, tile);
newBrick(tile * 22, tile * 14, tile, tile);
newBrick(tile * 19, tile * 14, tile, tile);
newBrick(tile * 21, tile * 14, tile, tile);
newBrick(tile * 24, tile * 14, tile, tile);
newBrick(tile * 25, tile * 14, tile, tile);
newBrick(tile * 26, tile * 14, tile, tile);
newBrick(tile * 27, tile * 14, tile, tile);
newBrick(tile * 28, tile * 14, tile, tile);
newBrick(tile * 29, tile * 14, tile, tile);
newBrick(tile * 31, tile * 14, tile, tile);
newBrick(tile * 32, tile * 14, tile, tile);
newBrick(tile * 30, tile * 14, tile, tile);
newBrick(tile * 34, tile * 14, tile, tile);
newBrick(tile * 33, tile * 14, tile, tile);
newBrick(tile * 35, tile * 14, tile, tile);
newBrick(tile * 37, tile * 14, tile, tile);
newBrick(tile * 36, tile * 14, tile, tile);
newBrick(tile * 38, tile * 14, tile, tile);
newBrick(tile * 39, tile * 14, tile, tile);
newBrick(tile * 40, tile * 14, tile, tile);
newGoal(tile * 39, tile * 13, tile, tile);
newStart(tile * 6, tile * 13, tile, tile);
newBrick(tile * 6, tile * 14, tile, tile);
newBrick(tile * 5, tile * 14, tile, tile);

})

createLevel(() => {
    clearLavas();
    clearBricks();
    clearChains();
    clearGoals();
    maxCamX = maxCameraDistance();

    newBrick(tile * 2, tile * 15, tile, tile);
newBrick(tile * 4, tile * 15, tile, tile);
newBrick(tile * 3, tile * 15, tile, tile);
newBrick(tile * 5, tile * 15, tile, tile);
newBrick(tile * 9, tile * 13, tile, tile);
newBrick(tile * 10, tile * 13, tile, tile);
newBrick(tile * 11, tile * 13, tile, tile);
newBrick(tile * 14, tile * 9, tile, tile);
newBrick(tile * 24, tile * 10, tile, tile);
newLava(tile * 6, tile * 15, tile, tile);
newLava(tile * 1, tile * 15, tile, tile);
newLava(tile * 0, tile * 15, tile, tile);
newLava(tile * 7, tile * 15, tile, tile);
newLava(tile * 8, tile * 15, tile, tile);
newLava(tile * 10, tile * 15, tile, tile);
newLava(tile * 9, tile * 15, tile, tile);
newLava(tile * 11, tile * 15, tile, tile);
newLava(tile * 12, tile * 15, tile, tile);
newLava(tile * 13, tile * 15, tile, tile);
newLava(tile * 15, tile * 15, tile, tile);
newLava(tile * 14, tile * 15, tile, tile);
newLava(tile * 17, tile * 15, tile, tile);
newLava(tile * 16, tile * 15, tile, tile);
newLava(tile * 19, tile * 15, tile, tile);
newLava(tile * 18, tile * 15, tile, tile);
newLava(tile * 20, tile * 15, tile, tile);
newLava(tile * 21, tile * 15, tile, tile);
newLava(tile * 22, tile * 15, tile, tile);
newLava(tile * 23, tile * 15, tile, tile);
newLava(tile * 24, tile * 15, tile, tile);
newLava(tile * 25, tile * 15, tile, tile);
newLava(tile * 26, tile * 15, tile, tile);
newLava(tile * 27, tile * 15, tile, tile);
newLava(tile * 28, tile * 15, tile, tile);
newLava(tile * 29, tile * 15, tile, tile);
newLava(tile * 31, tile * 15, tile, tile);
newLava(tile * 30, tile * 15, tile, tile);
newLava(tile * 32, tile * 15, tile, tile);
newLava(tile * 33, tile * 15, tile, tile);
newLava(tile * 34, tile * 15, tile, tile);
newLava(tile * 35, tile * 15, tile, tile);
newLava(tile * 36, tile * 15, tile, tile);
newLava(tile * 37, tile * 15, tile, tile);
newLava(tile * 38, tile * 15, tile, tile);
newLava(tile * 39, tile * 15, tile, tile);
newLava(tile * 40, tile * 15, tile, tile);
newLava(tile * 41, tile * 15, tile, tile);
newLava(tile * 42, tile * 15, tile, tile);
newLava(tile * 44, tile * 15, tile, tile);
newLava(tile * 45, tile * 15, tile, tile);
newLava(tile * 43, tile * 15, tile, tile);
newLava(tile * 46, tile * 15, tile, tile);
newLava(tile * 48, tile * 15, tile, tile);
newLava(tile * 49, tile * 15, tile, tile);
newLava(tile * 47, tile * 15, tile, tile);
newLava(tile * 50, tile * 15, tile, tile);
newLava(tile * 51, tile * 15, tile, tile);
newLava(tile * 52, tile * 15, tile, tile);
newLava(tile * 53, tile * 15, tile, tile);
newLava(tile * 54, tile * 15, tile, tile);
newLava(tile * 55, tile * 15, tile, tile);
newLava(tile * 56, tile * 15, tile, tile);
newLava(tile * 57, tile * 15, tile, tile);
newLava(tile * 59, tile * 15, tile, tile);
newLava(tile * 60, tile * 15, tile, tile);
newLava(tile * 58, tile * 15, tile, tile);
newBrick(tile * 14, tile * 8, tile, tile);
newBrick(tile * 14, tile * 7, tile, tile);
newBrick(tile * 14, tile * 6, tile, tile);
newBrick(tile * 14, tile * 5, tile, tile);
newStart(tile * 2, tile * 14, tile, tile);
newGoal(tile * 52, tile * 10, tile, tile);
newBrick(tile * 31, tile * 13, tile, tile);
newBrick(tile * 34, tile * 9, tile, tile);
newBrick(tile * 34, tile * 8, tile, tile);
newBrick(tile * 34, tile * 7, tile, tile);
newBrick(tile * 34, tile * 6, tile, tile);
newBrick(tile * 34, tile * 5, tile, tile);
newBrick(tile * 34, tile * 4, tile, tile);
newBrick(tile * 41, tile * 10, tile, tile);
newBrick(tile * 47, tile * 10, tile, tile);
newBrick(tile * 52, tile * 11, tile, tile);
newBrick(tile * 52, tile * 12, tile, tile);
newBrick(tile * 51, tile * 13, tile, tile);
newBrick(tile * 53, tile * 13, tile, tile);

})

createLevel(() => {
    clearLavas();
    clearBricks();
    clearChains();
    clearGoals();
    maxCamX = maxCameraDistance();

    newBrick(tile * 0, tile * 6, tile, tile);
    newBrick(tile * 0, tile * 7, tile, tile);
    newBrick(tile * 0, tile * 8, tile, tile);
    newBrick(tile * 0, tile * 9, tile, tile);
    newBrick(tile * 0, tile * 10, tile, tile);
    newBrick(tile * 0, tile * 11, tile, tile);
    newBrick(tile * 0, tile * 12, tile, tile);
    newBrick(tile * 0, tile * 13, tile, tile);
    newBrick(tile * 0, tile * 14, tile, tile);
    newBrick(tile * 0, tile * 15, tile, tile);
    newBrick(tile * 1, tile * 15, tile, tile);
    newBrick(tile * 4, tile * 15, tile, tile);
    newBrick(tile * 5, tile * 15, tile, tile);
    newBrick(tile * 2, tile * 15, tile, tile);
    newBrick(tile * 3, tile * 15, tile, tile);
    newBrick(tile * 6, tile * 15, tile, tile);
    newBrick(tile * 7, tile * 15, tile, tile);
    newBrick(tile * 8, tile * 15, tile, tile);
    newBrick(tile * 9, tile * 15, tile, tile);
    newBrick(tile * 10, tile * 15, tile, tile);
    newBrick(tile * 12, tile * 15, tile, tile);
    newBrick(tile * 13, tile * 15, tile, tile);
    newBrick(tile * 11, tile * 15, tile, tile);
    newBrick(tile * 14, tile * 15, tile, tile);
    newBrick(tile * 16, tile * 15, tile, tile);
    newBrick(tile * 17, tile * 15, tile, tile);
    newBrick(tile * 15, tile * 15, tile, tile);
    newBrick(tile * 18, tile * 15, tile, tile);
    newBrick(tile * 19, tile * 15, tile, tile);
    newBrick(tile * 20, tile * 15, tile, tile);
    newBrick(tile * 21, tile * 15, tile, tile);
    newBrick(tile * 22, tile * 15, tile, tile);
    newBrick(tile * 23, tile * 15, tile, tile);
    newBrick(tile * 24, tile * 15, tile, tile);
    newBrick(tile * 25, tile * 15, tile, tile);
    newBrick(tile * 26, tile * 15, tile, tile);
    newBrick(tile * 27, tile * 15, tile, tile);
    newBrick(tile * 28, tile * 15, tile, tile);
    newBrick(tile * 30, tile * 15, tile, tile);
    newBrick(tile * 31, tile * 15, tile, tile);
    newBrick(tile * 32, tile * 15, tile, tile);
    newBrick(tile * 29, tile * 15, tile, tile);
    newBrick(tile * 34, tile * 15, tile, tile);
    newBrick(tile * 33, tile * 15, tile, tile);
    newBrick(tile * 35, tile * 15, tile, tile);
    newBrick(tile * 36, tile * 15, tile, tile);
    newBrick(tile * 37, tile * 15, tile, tile);
    newBrick(tile * 38, tile * 15, tile, tile);
    newBrick(tile * 39, tile * 15, tile, tile);
    newBrick(tile * 40, tile * 15, tile, tile);
    newBrick(tile * 42, tile * 15, tile, tile);
    newBrick(tile * 43, tile * 15, tile, tile);
    newBrick(tile * 44, tile * 15, tile, tile);
    newBrick(tile * 45, tile * 15, tile, tile);
    newBrick(tile * 41, tile * 15, tile, tile);
    newBrick(tile * 46, tile * 15, tile, tile);
    newBrick(tile * 47, tile * 15, tile, tile);
    newBrick(tile * 48, tile * 15, tile, tile);
    newBrick(tile * 52, tile * 15, tile, tile);
    newBrick(tile * 49, tile * 15, tile, tile);
    newBrick(tile * 50, tile * 15, tile, tile);
    newBrick(tile * 51, tile * 15, tile, tile);
    newBrick(tile * 53, tile * 15, tile, tile);
    newBrick(tile * 54, tile * 15, tile, tile);
    newBrick(tile * 55, tile * 15, tile, tile);
    newBrick(tile * 56, tile * 15, tile, tile);
    newBrick(tile * 56, tile * 14, tile, tile);
    newBrick(tile * 56, tile * 13, tile, tile);
    newBrick(tile * 56, tile * 12, tile, tile);
    newBrick(tile * 56, tile * 11, tile, tile);
    newBrick(tile * 56, tile * 10, tile, tile);
    newBrick(tile * 56, tile * 8, tile, tile);
    newBrick(tile * 56, tile * 9, tile, tile);
    newBrick(tile * 56, tile * 7, tile, tile);
    newBrick(tile * 56, tile * 6, tile, tile);
    newBrick(tile * 56, tile * 5, tile, tile);
    newBrick(tile * 56, tile * 4, tile, tile);
    newBrick(tile * 56, tile * 3, tile, tile);
    newBrick(tile * 56, tile * 2, tile, tile);
    newBrick(tile * 56, tile * 1, tile, tile);
    newBrick(tile * 56, tile * 0, tile, tile);
    newBrick(tile * 0, tile * 5, tile, tile);
    newBrick(tile * 0, tile * 4, tile, tile);
    newBrick(tile * 0, tile * 3, tile, tile);
    newBrick(tile * 0, tile * 2, tile, tile);
    newBrick(tile * 0, tile * 1, tile, tile);
    newBrick(tile * 0, tile * 0, tile, tile);
    newStart(tile * 2, tile * 13, tile, tile);
    newGoal(tile * 54, tile * 14, tile, tile);

})

createLevel(() => {
    clearLavas();
    clearBricks();
    clearChains();
    clearGoals();
    maxCamX = maxCameraDistance();
    
    newGoal(tile * 30, tile * 8, tile, tile);
    newStart(tile * 10, tile * 4, tile, tile);
    newBrick(tile * 0, tile * 0, tile, tile);
    newBrick(tile * 0, tile * 1, tile, tile);
    newBrick(tile * 0, tile * 2, tile, tile);
    newBrick(tile * 0, tile * 3, tile, tile);
    newBrick(tile * 0, tile * 4, tile, tile);
    newBrick(tile * 0, tile * 5, tile, tile);
    newBrick(tile * 0, tile * 6, tile, tile);
    newBrick(tile * 0, tile * 7, tile, tile);
    newBrick(tile * 0, tile * 9, tile, tile);
    newBrick(tile * 0, tile * 10, tile, tile);
    newBrick(tile * 0, tile * 11, tile, tile);
    newBrick(tile * 0, tile * 8, tile, tile);
    newBrick(tile * 0, tile * 12, tile, tile);
    newBrick(tile * 0, tile * 14, tile, tile);
    newBrick(tile * 0, tile * 15, tile, tile);
    newBrick(tile * 0, tile * 13, tile, tile);
    newBrick(tile * 2, tile * 15, tile, tile);
    newBrick(tile * 1, tile * 15, tile, tile);
    newBrick(tile * 3, tile * 15, tile, tile);
    newBrick(tile * 4, tile * 15, tile, tile);
    newBrick(tile * 5, tile * 15, tile, tile);
    newLava(tile * 6, tile * 15, tile, tile);
    newLava(tile * 7, tile * 15, tile, tile);
    newLava(tile * 8, tile * 15, tile, tile);
    newLava(tile * 9, tile * 15, tile, tile);
    newLava(tile * 10, tile * 15, tile, tile);
    newRoofChain(tile * 7, tile * 12, tile, tile);
    newBrick(tile * 7, tile * 13, tile, tile);
    newBrick(tile * 8, tile * 13, tile, tile);
    newBrick(tile * 9, tile * 13, tile, tile);
    newBrick(tile * 10, tile * 13, tile, tile);
    newBrick(tile * 11, tile * 13, tile, tile);
    newRoofChain(tile * 11, tile * 12, tile, tile);
    newLava(tile * 11, tile * 15, tile, tile);
    newLava(tile * 12, tile * 15, tile, tile);
    newLava(tile * 13, tile * 15, tile, tile);
    newLava(tile * 14, tile * 15, tile, tile);
    newLava(tile * 15, tile * 15, tile, tile);
    newBrick(tile * 17, tile * 13, tile, tile);
    newBrick(tile * 18, tile * 13, tile, tile);
    newBrick(tile * 19, tile * 13, tile, tile);
    newBrick(tile * 20, tile * 13, tile, tile);
    newBrick(tile * 27, tile * 13, tile, tile);
    newBrick(tile * 21, tile * 13, tile, tile);
    newRoofChain(tile * 17, tile * 12, tile, tile);
    newRoofChain(tile * 21, tile * 12, tile, tile);
    newRoofChain(tile * 27, tile * 12, tile, tile);
    newBrick(tile * 28, tile * 13, tile, tile);
    newBrick(tile * 29, tile * 13, tile, tile);
    newBrick(tile * 30, tile * 13, tile, tile);
    newBrick(tile * 31, tile * 13, tile, tile);
    newRoofChain(tile * 31, tile * 12, tile, tile);
    newLava(tile * 16, tile * 15, tile, tile);
    newLava(tile * 17, tile * 15, tile, tile);
    newLava(tile * 19, tile * 15, tile, tile);
    newLava(tile * 20, tile * 15, tile, tile);
    newLava(tile * 21, tile * 15, tile, tile);
    newLava(tile * 18, tile * 15, tile, tile);
    newLava(tile * 22, tile * 15, tile, tile);
    newLava(tile * 23, tile * 15, tile, tile);
    newLava(tile * 24, tile * 15, tile, tile);
    newLava(tile * 26, tile * 15, tile, tile);
    newLava(tile * 25, tile * 15, tile, tile);
    newLava(tile * 27, tile * 15, tile, tile);
    newLava(tile * 28, tile * 15, tile, tile);
    newLava(tile * 29, tile * 15, tile, tile);
    newLava(tile * 30, tile * 15, tile, tile);
    newLava(tile * 31, tile * 15, tile, tile);
    newLava(tile * 32, tile * 15, tile, tile);
    newBrick(tile * 33, tile * 15, tile, tile);
    newBrick(tile * 35, tile * 15, tile, tile);
    newBrick(tile * 34, tile * 15, tile, tile);
    newBrick(tile * 37, tile * 15, tile, tile);
    newBrick(tile * 36, tile * 15, tile, tile);
    newBrick(tile * 38, tile * 15, tile, tile);
    newBrick(tile * 38, tile * 14, tile, tile);
    newBrick(tile * 38, tile * 13, tile, tile);
    newBrick(tile * 38, tile * 12, tile, tile);
    newBrick(tile * 38, tile * 11, tile, tile);
    newBrick(tile * 38, tile * 10, tile, tile);
    newBrick(tile * 38, tile * 9, tile, tile);
    newBrick(tile * 38, tile * 8, tile, tile);
    newBrick(tile * 38, tile * 6, tile, tile);
    newBrick(tile * 38, tile * 5, tile, tile);
    newBrick(tile * 38, tile * 4, tile, tile);
    newBrick(tile * 38, tile * 3, tile, tile);
    newBrick(tile * 38, tile * 7, tile, tile);
    newBrick(tile * 38, tile * 2, tile, tile);
    newBrick(tile * 38, tile * 1, tile, tile);
    newBrick(tile * 38, tile * 0, tile, tile);
    newBrick(tile * 37, tile * 0, tile, tile);
    newBrick(tile * 36, tile * 0, tile, tile);
    newBrick(tile * 35, tile * 0, tile, tile);
    newBrick(tile * 33, tile * 0, tile, tile);
    newBrick(tile * 32, tile * 0, tile, tile);
    newBrick(tile * 31, tile * 0, tile, tile);
    newBrick(tile * 30, tile * 0, tile, tile);
    newBrick(tile * 29, tile * 0, tile, tile);
    newBrick(tile * 27, tile * 0, tile, tile);
    newBrick(tile * 25, tile * 0, tile, tile);
    newBrick(tile * 23, tile * 0, tile, tile);
    newBrick(tile * 21, tile * 0, tile, tile);
    newBrick(tile * 18, tile * 0, tile, tile);
    newBrick(tile * 17, tile * 0, tile, tile);
    newBrick(tile * 16, tile * 0, tile, tile);
    newBrick(tile * 15, tile * 0, tile, tile);
    newBrick(tile * 14, tile * 0, tile, tile);
    newBrick(tile * 13, tile * 0, tile, tile);
    newBrick(tile * 11, tile * 0, tile, tile);
    newBrick(tile * 10, tile * 0, tile, tile);
    newBrick(tile * 9, tile * 0, tile, tile);
    newBrick(tile * 7, tile * 0, tile, tile);
    newBrick(tile * 5, tile * 0, tile, tile);
    newBrick(tile * 3, tile * 0, tile, tile);
    newBrick(tile * 2, tile * 0, tile, tile);
    newBrick(tile * 1, tile * 0, tile, tile);
    newBrick(tile * 4, tile * 0, tile, tile);
    newBrick(tile * 6, tile * 0, tile, tile);
    newBrick(tile * 8, tile * 0, tile, tile);
    newBrick(tile * 12, tile * 0, tile, tile);
    newBrick(tile * 19, tile * 0, tile, tile);
    newBrick(tile * 20, tile * 0, tile, tile);
    newBrick(tile * 22, tile * 0, tile, tile);
    newBrick(tile * 24, tile * 0, tile, tile);
    newBrick(tile * 26, tile * 0, tile, tile);
    newBrick(tile * 28, tile * 0, tile, tile);
    newBrick(tile * 34, tile * 0, tile, tile);
    newChainFadeIn(tile * 7, tile * 11, tile, tile);
    newChainFadeIn(tile * 11, tile * 11, tile, tile);
    newChainFadeIn(tile * 17, tile * 11, tile, tile);
    newChainFadeIn(tile * 21, tile * 11, tile, tile);
    newChainFadeIn(tile * 27, tile * 11, tile, tile);
    newChainFadeIn(tile * 31, tile * 11, tile, tile);

    
})

createLevel(() => {
    clearLavas();
    clearBricks();
    clearChains();
    clearGoals();
    maxCamX = maxCameraDistance();
    
newBrick(tile * 0, tile * 6, tile, tile);
newBrick(tile * 0, tile * 7, tile, tile);
newBrick(tile * 0, tile * 8, tile, tile);
newBrick(tile * 0, tile * 9, tile, tile);
newBrick(tile * 0, tile * 10, tile, tile);
newBrick(tile * 0, tile * 11, tile, tile);
newBrick(tile * 0, tile * 12, tile, tile);
newBrick(tile * 0, tile * 13, tile, tile);
newBrick(tile * 0, tile * 14, tile, tile);
newBrick(tile * 0, tile * 15, tile, tile);
newBrick(tile * 1, tile * 15, tile, tile);
newBrick(tile * 4, tile * 15, tile, tile);
newBrick(tile * 5, tile * 15, tile, tile);
newBrick(tile * 2, tile * 15, tile, tile);
newBrick(tile * 3, tile * 15, tile, tile);
newBrick(tile * 6, tile * 15, tile, tile);
newBrick(tile * 7, tile * 15, tile, tile);
newBrick(tile * 8, tile * 15, tile, tile);
newBrick(tile * 9, tile * 15, tile, tile);
newBrick(tile * 10, tile * 15, tile, tile);
newBrick(tile * 12, tile * 15, tile, tile);
newBrick(tile * 13, tile * 15, tile, tile);
newBrick(tile * 11, tile * 15, tile, tile);
newBrick(tile * 14, tile * 15, tile, tile);
newBrick(tile * 16, tile * 15, tile, tile);
newBrick(tile * 17, tile * 15, tile, tile);
newBrick(tile * 15, tile * 15, tile, tile);
newBrick(tile * 18, tile * 15, tile, tile);
newBrick(tile * 19, tile * 15, tile, tile);
newBrick(tile * 20, tile * 15, tile, tile);
newBrick(tile * 21, tile * 15, tile, tile);
newBrick(tile * 22, tile * 15, tile, tile);
newBrick(tile * 23, tile * 15, tile, tile);
newBrick(tile * 24, tile * 15, tile, tile);
newBrick(tile * 25, tile * 15, tile, tile);
newBrick(tile * 26, tile * 15, tile, tile);
newBrick(tile * 27, tile * 15, tile, tile);
newBrick(tile * 28, tile * 15, tile, tile);
newBrick(tile * 30, tile * 15, tile, tile);
newBrick(tile * 31, tile * 15, tile, tile);
newBrick(tile * 32, tile * 15, tile, tile);
newBrick(tile * 29, tile * 15, tile, tile);
newBrick(tile * 34, tile * 15, tile, tile);
newBrick(tile * 33, tile * 15, tile, tile);
newBrick(tile * 35, tile * 15, tile, tile);
newBrick(tile * 36, tile * 15, tile, tile);
newBrick(tile * 37, tile * 15, tile, tile);
newBrick(tile * 38, tile * 15, tile, tile);
newBrick(tile * 39, tile * 15, tile, tile);
newBrick(tile * 40, tile * 15, tile, tile);
newBrick(tile * 42, tile * 15, tile, tile);
newBrick(tile * 43, tile * 15, tile, tile);
newBrick(tile * 44, tile * 15, tile, tile);
newBrick(tile * 45, tile * 15, tile, tile);
newBrick(tile * 41, tile * 15, tile, tile);
newBrick(tile * 46, tile * 15, tile, tile);
newBrick(tile * 47, tile * 15, tile, tile);
newBrick(tile * 48, tile * 15, tile, tile);
newBrick(tile * 52, tile * 15, tile, tile);
newBrick(tile * 49, tile * 15, tile, tile);
newBrick(tile * 50, tile * 15, tile, tile);
newBrick(tile * 51, tile * 15, tile, tile);
newBrick(tile * 53, tile * 15, tile, tile);
newBrick(tile * 54, tile * 15, tile, tile);
newBrick(tile * 55, tile * 15, tile, tile);
newBrick(tile * 56, tile * 15, tile, tile);
newBrick(tile * 56, tile * 14, tile, tile);
newBrick(tile * 56, tile * 13, tile, tile);
newBrick(tile * 56, tile * 12, tile, tile);
newBrick(tile * 56, tile * 11, tile, tile);
newBrick(tile * 56, tile * 10, tile, tile);
newBrick(tile * 56, tile * 8, tile, tile);
newBrick(tile * 56, tile * 9, tile, tile);
newBrick(tile * 56, tile * 7, tile, tile);
newBrick(tile * 56, tile * 6, tile, tile);
newBrick(tile * 56, tile * 5, tile, tile);
newBrick(tile * 56, tile * 4, tile, tile);
newBrick(tile * 56, tile * 3, tile, tile);
newBrick(tile * 56, tile * 2, tile, tile);
newBrick(tile * 56, tile * 1, tile, tile);
newBrick(tile * 56, tile * 0, tile, tile);
newBrick(tile * 0, tile * 5, tile, tile);
newBrick(tile * 0, tile * 4, tile, tile);
newBrick(tile * 0, tile * 3, tile, tile);
newBrick(tile * 0, tile * 2, tile, tile);
newBrick(tile * 0, tile * 1, tile, tile);
newBrick(tile * 0, tile * 0, tile, tile);
newStart(tile * 2, tile * 13, tile, tile);
newGoal(tile * 54, tile * 14, tile, tile);
    
})

startLevel(0);